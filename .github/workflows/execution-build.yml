name: Execution Build

on:
  push:
    branches: ["*"]
    paths:
      - "execution/**"
      - ".github/workflows/execution-build.yml"

jobs:
  codeBuild:
    name: Build Code with Hatch
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
      - name: Build the project
        run: hatch build
      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: python-build-output-${{ matrix.python-version }}
          path: |
            dist/
            build/
            logs/
      - name: Add failure summary
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            core.summary.addHeading('‚ùå codeBuild failed (Python ${{ matrix.python-version }})')
            core.summary.addRaw('Check logs and uploaded artifacts for details.')
            await core.summary.write()

  lintingChecks:
    name: "Run Linting Checks"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
      - name: Create Hatch environment
        run: |
          hatch env create
      - name: Build the project
        run: |
          hatch build
      - name: Run isort
        run: |
          echo "Running isort..."
          hatch run dev:isort ./execution --check-only --diff
      - name: Run black
        run: |
          echo "Running black..."
          hatch run dev:black ./execution --check --diff
      - name: Run flake8
        run: |
          echo "Running flake8..."
          hatch run dev:flake8 ./execution

  mypyChecks:
    name: "Run MyPy Checks"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
      - name: Build the project
        run: |
          hatch build
      - name: Create Hatch environment
        run: |
          hatch env create
      - name: Run mypy
        run: |
          echo "Running mypy..."
          hatch run dev:mypy ./execution

  unitTests:
    name: "Run Unit Tests"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
      - name: Build the project
        run: |
          hatch build
      - name: Run unit tests
        run: |
          echo "Running unit tests..."
          hatch test tests/execution
