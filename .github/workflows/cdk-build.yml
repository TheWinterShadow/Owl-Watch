name: CDK Build

on:
  push:
    branches: ["*"]
    paths:
      - 'cdk/**'
      - '.github/workflows/cdk-build.yml'

jobs:
  codeBuild:
    name: 'Build Code with Node'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ID_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_KEY_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          npm install
      - name: Build the project
        run: |
          npm run build

  lintingChecks:
    name: 'Run Linting Checks'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # AWS credentials not required for linting
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          npm install
      - name: Run tsc
        run: |
          echo "Running tsc..."
          npx tsc --noEmit

  unitTests:
    name: 'Run Unit Tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # AWS credentials not required for unit tests
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          npm install
      - name: Run unit tests
        run: |
          echo "Running unit tests..."
          npm run test

  cdkStackList:
    name: 'List CDK Stacks'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ID_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_KEY_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          npm install
      - name: List CDK stacks
        run: |
          echo "Listing CDK stacks..."
          cd cdk && npx cdk list

  cdkDiff:
    name: 'CDK Diff'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ID_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_KEY_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          npm install
      - name: Run CDK diff
        run: |
          echo "Running CDK diff..."
          cd cdk && npx cdk diff

  cdkSynth:
    name: 'CDK Synth'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ID_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_KEY_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          npm install
      - name: Run CDK synth
        run: |
          echo "Running CDK synth..."
          cd cdk && npx cdk synth